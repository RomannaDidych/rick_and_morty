{"version":3,"sources":["Components/Characters/Card/Card.js","Components/Characters/Characters/Characters.js","Components/Episodes/Row/Row.js","Components/Episodes/Episodes/Episodes.js","Components/Locations/Locations.js","Components/WatchList/WatchList.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","image","alt","name","species","countOnPage","Characters","getAllChracters","e","a","arr","Array","from","length","maxAmount","map","ind","fetch","response","json","items","allChracters","filteredCharacters","firstState","filter","obj","i","setState","characters","changeItemsOnPage","newState","target","value","currentNumber","slice","setFilteredCharacters","current","filterStatus","hero","status","filterGender","gender","filterSpecies","selectStatus","currentState","selectGender","selectSpecies","state","onClick","this","htmlFor","id","onChange","key","Component","Row","episode","air_date","Episodes","getAllEpisodes","allEpisodes","filteredEpisodes","episodes","film","Locations","WatchList","App","to","activeClassName","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d5bc7e6.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './card_style.scss';\r\n\r\nconst Card = (props) => {\r\n\treturn(\r\n\t\t<div className= 'card'>\r\n\t\t\t<img className= 'card__img' src={props.image} alt={props.name} />\r\n\t\t\t<div className= 'card__content'>\r\n\t\t\t\t<h3 className= 'card__name'>{props.name}</h3>\r\n\t\t\t\t<p className= 'card__species'>{props.species}</p>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Card;","import React, {Component} from 'react';\r\nimport Card from'../Card/Card'\r\nimport './characters-style.scss';\r\n\r\n\r\nconst mainURL = 'https://rickandmortyapi.com/api/character/';\r\nconst countOnPage = 10;\r\n\r\n\r\nclass Characters extends Component{\r\n\tconstructor() {\r\n        super();\r\n        this.maxAmount = 671\r\n        this.currentNumber = 0\r\n        this.allChracters = []\r\n        this.filteredCharacters = []\r\n        this.filterStatus = 'all'\r\n        this.filterGender = 'all'\r\n        this.filterSpecies = 'all'\r\n        //this.filteredCharacters = []        \r\n        this.state = {        \t\r\n        \tcharacters: []\r\n        }        \r\n        this.getAllChracters();               \r\n    }\r\n\r\n\tgetAllChracters = async (e) =>{\r\n\t\tlet arr =  Array.from({length:this.maxAmount}).map((arr, ind) =>  ind +1);\t\t\t\t\t\r\n\t\tconst response = await fetch(`${mainURL}${arr}`);\t\t\r\n\t\tconst items = await response.json();\r\n\t\tthis.allChracters = items;\r\n\t\tthis.filteredCharacters = items;\t\t\r\n\t\tconst firstState = items.filter((obj, i) => i < countOnPage);\r\n\t\tthis.setState({characters: firstState});\t\t\t\t\r\n\t}\r\n\r\n\tchangeItemsOnPage = (e) => {\r\n\t\tlet newState;\r\n\t\tif (e.target.value === 'next')\t{\r\n\t\t\tif (this.currentNumber >= this.filteredCharacters.length - 10) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.currentNumber += 10;\r\n\t\t\tnewState = this.filteredCharacters.slice(this.currentNumber, this.currentNumber + countOnPage );\r\n\t\t\t\t\t\t\r\n\t\t} else {\r\n\t\t\tif (this.currentNumber <= 0){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.currentNumber -= 10;\r\n\t\t\tnewState = this.filteredCharacters.slice(this.currentNumber, this.currentNumber + countOnPage);\r\n\t\t\t\r\n\t\t};\r\n\t\tthis.setState({characters: newState});\r\n\t};\r\n\t\r\n\r\n\tsetFilteredCharacters = () => {\r\n\t\tlet current = [];\r\n\t\t//if((this.filterStatus === 'all') || (this.filterGander === 'all') || (this.filterSpecies !== 'all')){}\r\n\t\tthis.filteredCharacters = this.allChracters;\t\t\r\n\t\tif(this.filterStatus !== 'all'){\r\n\t\t\tcurrent = this.filteredCharacters.filter((hero) => hero.status === this.filterStatus)\r\n\t\t\tthis.filteredCharacters = current;\r\n\t\t};\r\n\t\tif(this.filterGender !== 'all'){\r\n\t\t\tcurrent = this.filteredCharacters.filter((hero) => hero.gender === this.filterGender);\r\n\t\t\tthis.filteredCharacters = current;\r\n\t\t};\r\n\t\tif(this.filterSpecies !== 'all'){\r\n\t\t\tcurrent = this.filteredCharacters.filter((hero) => hero.species === this.filterSpecies)\r\n\t\t\tthis.filteredCharacters = current;\r\n\t\t}\r\n\t}\r\n\r\n\tselectStatus = (e) => {\r\n\t\tthis.filterStatus = e.target.value;\t\t\r\n\t\tthis.setFilteredCharacters();\r\n\t\tconst currentState = this.filteredCharacters.filter((obj, i) => i < countOnPage);\r\n\t\tthis.setState({characters: currentState});\r\n\t\tthis.currentNumber = 0;\r\n\t}\r\n\r\n\tselectGender = (e) => {\r\n\t\tthis.filterGender = e.target.value;\t\t\r\n\t\tthis.setFilteredCharacters();\r\n\t\tconst currentState = this.filteredCharacters.filter((obj, i) => i < countOnPage);\r\n\t\tthis.setState({characters: currentState});\r\n\t\tthis.currentNumber = 0;\r\n\t}\r\n\r\n\tselectSpecies = (e) => {\r\n\t\tthis.filterSpecies = e.target.value;\t\t\r\n\t\tthis.setFilteredCharacters();\r\n\t\tconst currentState = this.filteredCharacters.filter((obj, i) => i < countOnPage);\r\n\t\tthis.setState({characters: currentState});\r\n\t\tthis.currentNumber = 0;\r\n\t}\r\n\r\n\r\n\trender(){\t\t\t\t\r\n\t\treturn (\r\n\t\t\t<div className='container'>\t\t\t\t\t\t\t\t\r\n\t\t\t\t<div className= \"buttons\">\r\n\t\t\t\t\t<button className= 'btn' onClick={this.changeItemsOnPage} value='previous'> &#60;&#60;  previous</button>\r\n\t\t\t\t\t<div className='selectors'>\r\n\t\t\t\t\t\t<div className='selector'>\r\n\t\t\t\t\t\t\t<label htmlFor=\"status\" className='selector__label'>status:</label>\r\n\t\t\t\t\t\t\t<select className='selector__select' name=\"status\" id=\"status\" onChange={this.selectStatus}>\r\n\t\t\t\t\t\t\t\t<option value=\"all\">all</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Alive\">alive</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Dead\">dead</option>\r\n\t\t\t\t\t\t\t\t<option value=\"unknown\">unknown</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t<span className='selector__arrow'></span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='selector'>\r\n\t\t\t\t\t\t\t<label htmlFor=\"gender\" className='selector__label'>gender:</label>\r\n\t\t\t\t\t\t\t<select className='selector__select' name=\"gender\" id=\"gender\" onChange={this.selectGender}>\r\n\t\t\t\t\t\t\t\t<option value=\"all\">all</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Male\">male</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Female\">female</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Genderless\">genderless</option>\r\n\t\t\t\t\t\t\t\t<option value=\"unknown\">unknown</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t<span className='selector__arrow'></span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='selector'>\r\n\t\t\t\t\t\t\t<label htmlFor=\"species\" className='selector__label'>species:</label>\r\n\t\t\t\t\t\t\t<select className='selector__select' name=\"species\" id=\"species\" onChange={this.selectSpecies}>\r\n\t\t\t\t\t\t\t\t<option value=\"all\">all</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Human\">human</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Alien\">alien</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Humanoid\">humanoid</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Poopybutthole\">poopybutthole</option>\r\n\t\t\t\t\t\t\t\t<option value=\"unknown\">unknown</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Mythological Creature\">mythological creature</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Animal\">animal</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Robot\">robot</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Cronenberg\">cronenberg</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Disease\">disease</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Planet\">planet</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t<span className='selector__arrow'></span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button className= 'btn' onClick={this.changeItemsOnPage} value='next'>next  &#62;&#62;</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className= 'table'>\r\n\t\t\t\t\t{this.state.characters.map((hero) => <Card {...hero} key={hero.id} />)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default Characters;\r\n\r\n","import React, {Component} from 'react';\r\nimport './row_styles.scss';\r\n\r\n\r\nconst Row = (props) => {\t\t\r\n\treturn(\r\n\t\t<div className= 'row'>\r\n\t\t\t<div className= 'row__episode'>{props.episode}</div>\r\n\t\t\t<div className= 'row__name'>{props.name}</div>\r\n\t\t\t<div className= 'row__air_date'>{props.air_date}</div>\t\t\t\t\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Row;","import React, {Component} from 'react';\r\nimport Row from '../Row/Row';\r\nimport './episodes_style.scss';\r\n\r\nconst mainURL = 'https://rickandmortyapi.com/api/episode/';\r\nconst countOnPage = 25;\r\n\r\nclass Episodes extends Component{\r\n\tconstructor() {\r\n        super();\r\n        this.maxAmount = 41\r\n        this.currentNumber = 0\r\n        this.allEpisodes = []\r\n        this.filteredEpisodes = []\r\n        this.filterStatus = 'all'\r\n        this.filterGender = 'all'\r\n        this.filterSpecies = 'all'                \r\n        this.state = {        \t\r\n        \tepisodes: []\r\n        }        \r\n        this.getAllEpisodes();               \r\n    }\r\n\r\n    getAllEpisodes = async (e) =>{\r\n\t\tlet arr =  Array.from({length:this.maxAmount}).map((arr, ind) =>  ind +1);\t\t\t\t\t\r\n\t\tconst response = await fetch(`${mainURL}${arr}`);\t\t\r\n\t\tconst items = await response.json();\r\n\t\tthis.allEpisodes = items; \r\n\t\tthis.filteredEpisodes = items;\t\t\r\n\t\tconst firstState = items.filter((obj, i) => i < countOnPage);\r\n\t\tthis.setState({episodes: firstState});\t\t\t\t\r\n\t}\r\n\r\n\tchangeItemsOnPage = (e) => {\r\n\t\tlet newState;\r\n\t\tif (e.target.value === 'next')\t{\r\n\t\t\tif (this.currentNumber >= this.filteredEpisodes.length - 25) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.currentNumber += 25;\r\n\t\t\tnewState = this.filteredEpisodes.slice(this.currentNumber, this.currentNumber + countOnPage );\r\n\t\t\t\t\t\t\r\n\t\t} else {\r\n\t\t\tif (this.currentNumber <= 0){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.currentNumber -= 25;\r\n\t\t\tnewState = this.filteredEpisodes.slice(this.currentNumber, this.currentNumber + countOnPage);\r\n\t\t\t\r\n\t\t};\r\n\t\tthis.setState({episodes: newState});\r\n\t};\r\n\r\n\t\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className='episodContainer'>\r\n\t\t\t\t<div className= \"episodButtons\">\r\n\t\t\t\t\t<button className= 'btn' onClick={this.changeItemsOnPage} value='previous'> &#60;&#60;  previous</button>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<button className= 'btn' onClick={this.changeItemsOnPage} value='next'>next  &#62;&#62;</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className= 'episodTable'>\r\n\t\t\t\t\t<div className= 'episodTable__head'>\r\n\t\t\t\t\t\t<div className= 'episodTable__episode'>episode</div>\r\n\t\t\t\t\t\t<div className= 'episodTable__name'>episodes name</div>\r\n\t\t\t\t\t\t<div className= 'episodTable__air_date'>air date</div>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{this.state.episodes.map((film) => <Row {...film} key={film.id} />)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default Episodes;\r\n\r\n/*<div className='selectors'>\r\n\t\t\t\t\t\t<div className='selector'>\r\n\t\t\t\t\t\t\t<label htmlFor=\"status\" className='selector__label'>status:</label>\r\n\t\t\t\t\t\t\t<select className='selector__select' name=\"status\" id=\"status\" onChange={this.selectStatus}>\r\n\t\t\t\t\t\t\t\t<option value=\"all\">all</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Alive\">alive</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Dead\">dead</option>\r\n\t\t\t\t\t\t\t\t<option value=\"unknown\">unknown</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t<span className='selector__arrow'></span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='selector'>\r\n\t\t\t\t\t\t\t<label htmlFor=\"gender\" className='selector__label'>gender:</label>\r\n\t\t\t\t\t\t\t<select className='selector__select' name=\"gender\" id=\"gender\" onChange={this.selectGender}>\r\n\t\t\t\t\t\t\t\t<option value=\"all\">all</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Male\">male</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Female\">female</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Genderless\">genderless</option>\r\n\t\t\t\t\t\t\t\t<option value=\"unknown\">unknown</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t<span className='selector__arrow'></span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='selector'>\r\n\t\t\t\t\t\t\t<label htmlFor=\"species\" className='selector__label'>species:</label>\r\n\t\t\t\t\t\t\t<select className='selector__select' name=\"species\" id=\"species\" onChange={this.selectSpecies}>\r\n\t\t\t\t\t\t\t\t<option value=\"all\">all</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Human\">human</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Alien\">alien</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Humanoid\">humanoid</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Poopybutthole\">poopybutthole</option>\r\n\t\t\t\t\t\t\t\t<option value=\"unknown\">unknown</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Mythological Creature\">mythological creature</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Animal\">animal</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Robot\">robot</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Cronenberg\">cronenberg</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Disease\">disease</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Planet\">planet</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t<span className='selector__arrow'></span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>*/\r\n\r\n/*parsedStr = (str) => {\r\n\t\tconst date = new Date(str);\r\n\t\tconsole.log(date)\r\n\t\tconst newStr = `${date.getMonth()} ${date.getDate()}, ${date.getFullYear()}`;\r\n\t\t//console.log(newStr);\r\n\t\treturn newStr;\r\n\t}*/","import React, {Component} from 'react';\r\nimport '../../App.scss';\r\n\r\nclass Locations extends Component{\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<h2 className='title'>Locations</h2>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default Locations;","import React, {Component} from 'react';\r\nimport '../../App.scss';\r\n\r\nclass WatchList extends Component{\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<h2 className='title'>My Watch List</h2>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default WatchList;","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch, Link, Redirect, NavLink} from 'react-router-dom';\nimport Characters from './Components/Characters/Characters/Characters';\nimport Episodes from './Components/Episodes/Episodes/Episodes';\nimport Locations from './Components/Locations/Locations';\nimport WatchList from './Components/WatchList/WatchList';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className= 'wrapper'>\n        <div className= 'bg-image'>      \n          \n        <Router className= 'router'>   \n               <div className='nav'>\n                  <NavLink className='app-link' to='/characters' activeClassName='active-link'>Characters</NavLink>\n                  <NavLink className='app-link' to='/episodes' activeClassName='active-link'>Episodes</NavLink>\n                  <NavLink className='app-link' to='/locations' activeClassName='active-link'>Locations</NavLink>\n                  <NavLink className='app-link' to='/watchList' activeClassName='active-link'>My Watch List</NavLink>                 \n               </div>               \n      \n               <Switch className='switch'>\n                  <Route path='/characters' component= {Characters} exact/>\n                  <Route path='/episodes' component= {Episodes} exact/>\n                  <Route path='/locations' component= {Locations} />\n                  <Route path='/watchList' component= {WatchList} exact/>                                    \n                  <Route path='/' component= {Characters} exact/>\n                  <Redirect to=\"/characters\" />                 \n                </Switch>\n        </Router>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n\n/*<div className= 'wrapper'>\n        <div className= 'bg-image'>      \n          \n        <Router className= 'router'>   \n               <div className='nav'>\n                  <NavLink className='app-link' to='/main' activeClassName='active-link'>Головна</NavLink>\n                  <NavLink className='app-link' to='/posts' activeClassName='active-link'>Публікації</NavLink>\n                  <NavLink className='app-link' to='/pictures' activeClassName='active-link'>Галерея</NavLink>\n                  <NavLink className='app-link' to='/contacts' activeClassName='active-link'>Contacts</NavLink>                 \n               </div>               \n      \n               <switch className='switch'>\n                  <Route path='/main' component= {Main} exact/>\n                  <Route path='/posts' component= {Posts} exact/>\n                  <Route path='/pictures' component= {Pictures} />\n                  <Route path='/contacts' component= {Contacts} exact/>                 \n                  <Route path='/contacts/:firstName' component= {Single} />                  \n                  <Route path='/' component= {Main} exact/>\n                 \n                </switch>\n        </Router>\n        </div>\n    </div>*/\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}