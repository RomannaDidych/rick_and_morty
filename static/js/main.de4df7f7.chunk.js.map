{"version":3,"sources":["Components/Characters/Card.js","Components/Characters/Characters.js","Components/Episodes/Episodes.js","Components/Locations/Locations.js","Components/WatchList/WatchList.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","image","alt","name","species","mainURL","Characters","getChracters","a","arr","getNextArr","fetch","response","json","items","setState","characters","currentNumber","setMaxAmount","count","maxAmount","info","condition","Array","from","length","map","ind","state","data","this","console","log","hero","key","id","onClick","value","Component","Episodes","Locations","WatchList","App","to","activeClassName","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de4df7f7.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './characters-style.scss';\r\n\r\nconst Card = (props) => {\r\n\treturn(\r\n\t\t<div className= 'card'>\r\n\t\t\t<img className= 'card__img' src={props.image} alt={props.name} />\r\n\t\t\t<div className= 'card__content'>\r\n\t\t\t\t<h3 className= 'card__name'>{props.name}</h3>\r\n\t\t\t\t<p className= 'card__species'>{props.species}</p>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Card;","import React, {Component} from 'react';\r\nimport Card from'./Card'\r\nimport './characters-style.scss';\r\n\r\n\r\nconst mainURL = 'https://rickandmortyapi.com/api/character/';\r\nconst countOnPage = 10;\r\nconst characters = [];\r\n\r\nclass Characters extends Component{\r\n\tconstructor() {\r\n        super();\r\n        this.maxAmount = 0\r\n        this.currentNumber = 0        \r\n        this.state = {        \t\r\n        \tcharacters: []\r\n        }\r\n        this.setMaxAmount();               \r\n    }\r\n\r\n\tgetChracters = async () =>{\t\t\r\n\t\tconst arr = this.getNextArr()\t\t\t\t\r\n\t\tconst response = await fetch(`${mainURL}${arr}`);\t\t\r\n\t\tconst items = await response.json();\r\n\t\tthis.setState({characters: items})\t\t\r\n\t\tconst newCurrent = this.currentNumber + 10;\t\t\r\n\t\treturn items;\t\t\r\n\t}\r\n\r\n\tsetMaxAmount = async () =>{\r\n\t\tconst response = await fetch(mainURL);\r\n\t\tconst count = await response.json();\r\n\t\tthis.maxAmount = count.info.count;\t\t\t\t\r\n\t}\r\n\r\n\t/*getPreviousIDarr = () => {\r\n\t\tconst arr = Array.from({length: this.getNextLength()}).map((arr, ind) => this.state.currentNumber + ind - 9);\r\n\t\treturn arr;\r\n\t}*/\r\n\r\n\tgetNextArr = () => {\r\n\t\tconst condition = this.maxAmount - this.currentNumber;\r\n\t\tlet arr =[];\r\n\t\tif(condition >= countOnPage ) {\r\n\t\t\tarr =  Array.from({length:countOnPage}).map((arr, ind) => this.currentNumber + ind +1);\r\n\t\t} else {\r\n\t\t\tarr =  Array.from({length:condition}).map((arr, ind) => this.currentNumber + ind +1);\r\n\t\t}\r\n\t\treturn arr;\r\n\t}\r\n\r\n\r\n\trender(){\r\n\t\t\r\n\t\tconst data = this.getChracters;\r\n\t\tconsole.log(data);\t\t\r\n\t\treturn (\r\n\t\t\t<div className='container'>\t\t\t\t\r\n\t\t\t\t<h2 className='title'>Characters</h2>\r\n\t\t\t\t<div className= 'table'>\r\n\t\t\t\t\t{this.state.characters.map((hero) => <Card {...hero} key={hero.id} />)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className= \"buttons\">\r\n\t\t\t\t\t<button onClick={this.getChracters} value='previous'>previous characters</button>\r\n\t\t\t\t\t<button onClick={this.getChracters} value='next'>next characters</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default Characters;\r\n\r\n//<button onClick={this.getChracters}>get Characters</button>\r\n//onClick={() =>{console.log(characters)}}\r\n//const response = await fetch(`https://rickandmortyapi.com/api/character/${Array.from({length: lengthArr}).map((arr, ind) => this.state.currentNumber + ind +1)}`);\r\n//const response = await fetch(`https://rickandmortyapi.com/api/character/${Array.from({length: 10}).map((arr, ind) => this.state.currentNumber + ind +1)}`);\t","import React, {Component} from 'react';\r\nimport '../../App.scss';\r\n\r\nclass Episodes extends Component{\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<h2 className='title'>Episodes</h2>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default Episodes;","import React, {Component} from 'react';\r\nimport '../../App.scss';\r\n\r\nclass Locations extends Component{\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<h2 className='title'>Locations</h2>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default Locations;","import React, {Component} from 'react';\r\nimport '../../App.scss';\r\n\r\nclass WatchList extends Component{\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<h2 className='title'>My Watch List</h2>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default WatchList;","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch, Link, NavLink} from 'react-router-dom';\nimport Characters from './Components/Characters/Characters';\nimport Episodes from './Components/Episodes/Episodes';\nimport Locations from './Components/Locations/Locations';\nimport WatchList from './Components/WatchList/WatchList';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className= 'wrapper'>\n        <div className= 'bg-image'>      \n          \n        <Router className= 'router'>   \n               <div className='nav'>\n                  <NavLink className='app-link' to='/characters' activeClassName='active-link'>Characters</NavLink>\n                  <NavLink className='app-link' to='/episodes' activeClassName='active-link'>Episodes</NavLink>\n                  <NavLink className='app-link' to='/locations' activeClassName='active-link'>Locations</NavLink>\n                  <NavLink className='app-link' to='/WatchList' activeClassName='active-link'>My Watch List</NavLink>                 \n               </div>               \n      \n               <Switch className='switch'>\n                  <Route path='/characters' component= {Characters} exact/>\n                  <Route path='/episodes' component= {Episodes} exact/>\n                  <Route path='/locations' component= {Locations} />\n                  <Route path='/WatchList' component= {WatchList} exact/>                                    \n                  <Route path='/' component= {Characters} exact/>                 \n                </Switch>\n        </Router>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n\n/*<div className= 'wrapper'>\n        <div className= 'bg-image'>      \n          \n        <Router className= 'router'>   \n               <div className='nav'>\n                  <NavLink className='app-link' to='/main' activeClassName='active-link'>Головна</NavLink>\n                  <NavLink className='app-link' to='/posts' activeClassName='active-link'>Публікації</NavLink>\n                  <NavLink className='app-link' to='/pictures' activeClassName='active-link'>Галерея</NavLink>\n                  <NavLink className='app-link' to='/contacts' activeClassName='active-link'>Contacts</NavLink>                 \n               </div>               \n      \n               <switch className='switch'>\n                  <Route path='/main' component= {Main} exact/>\n                  <Route path='/posts' component= {Posts} exact/>\n                  <Route path='/pictures' component= {Pictures} />\n                  <Route path='/contacts' component= {Contacts} exact/>                 \n                  <Route path='/contacts/:firstName' component= {Single} />                  \n                  <Route path='/' component= {Main} exact/>\n                 \n                </switch>\n        </Router>\n        </div>\n    </div>*/\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}